name: build
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0" # weekly
  pull_request:
    branches:
      - main

jobs:
  # based on https://slashgear.github.io/how-to-split-test-by-folder-with-github-action/
  get_test_scripts:
    runs-on: ubuntu-latest
    outputs:
      script: ${{ steps.get-scripts.outputs.script }}
    steps:
      - uses: actions/checkout@v2
      - id: get-scripts
        # it's weird to me, but the quotes around \n should *not* be escaped or it breaks
        run: echo "::set-output name=script::$(ls tests/test*py | jq -R -s -c 'split("\n")[:-1]')"
  build:
    runs-on: ubuntu-latest
    needs: [get_test_scripts]
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        test_script: ${{fromJson(needs.get_test_scripts.outputs.script)}}
      fail-fast: false
    name: CI
    steps:
      - uses: actions/checkout@v2
      - name: Install Python 3
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: setup.py
      - name: Install dependencies
        run: |
          # using the --upgrade and --upgrade-strategy eager flags ensures that
          # pip will always install the latest allowed version of all
          # dependencies, to make sure the cache doesn't go stale
          pip install --upgrade --upgrade-strategy eager -e .
          pip install --upgrade --upgrade-strategy eager pytest-cov

      - name: Run tests with pytest
        if: ${{ matrix.test_script == 'display' }}
        # we have two cores on the linux github action runners:
        # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
        run: |
          pip install --upgrade --upgrade-strategy eager pytest-xdist
          pytest -n 2 --cov=plenoptic ${{ matrix.test_script }}
      - name: Run tests with pytest
        if: ${{ matrix.test_script != 'display' }}
        # only test_display should parallelize across the cores, the others get
        # slowed down by it
        run: 'pytest --cov=plenoptic ${{ matrix.test_script }}'
      - name: Upload to codecov
        run: 'bash <(curl -s https://codecov.io/bash)'
