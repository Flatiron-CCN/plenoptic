[project]
name = "plenoptic"
dynamic = ["version"]
authors = [{name="Plenoptic authors"}]
description = "Python library for model-based stimulus synthesis."
readme = "README.md"
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Science/Research",
]
keywords = ['neuroscience', 'pytorch', 'visual information processing', 'machine learning', 'explainability', 'computational models']

dependencies = [
    "numpy>=1.1",
    "torch>=1.8,!=1.12.0",
    "pyrtools>=1.0.1",
    "scipy>=1.0",
    "matplotlib>=3.3",
    "tqdm>=4.29",
    "imageio>=2.5",
    "scikit-image>=0.15.0",
    "einops>=0.3.0",
]

[build-system]
requires = ["setuptools", "setuptools-scm[toml]"]
build-backend = "setuptools.build_meta"

[project.optional-dependencies]
docs = [
     'sphinx',
     # fix sphinx 7 incompatibility issue
     'sphinx_rtd_theme>=1.3.0rc1',
     'numpydoc',
     'nbsphinx',
     'nbsphinx_link',
     'sphinxcontrib-apidoc',
     'sphinx-autodoc-typehints',
     # because of this issue:
     # https://nbsphinx.readthedocs.io/en/0.6.0/installation.html#Pygments-Lexer-for-Syntax-Highlighting
     'ipython',
     'sphinx-copybutton',
     'sphinxemoji',
]

dev = [
    "pytest>=5.1.2",
    'pytest-cov',
    'pytest-xdist',
    "torchvision>=0.3",
    "requests>=2.21",
    "nox",
    "ruff>=0.2"
]

nb = [
    'jupyter',
    'ipywidgets',
    "torchvision>=0.3",
    'nbclient>=0.5.5',
]

[project.urls]
"Homepage" = "https://github.com/LabForComputationalVision/plenoptic"
"Documentation" = "https://plenoptic.readthedocs.io/en/latest/"
"Download" = "https://zenodo.org/doi/10.5281/zenodo.10151130"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
write_to = "src/plenoptic/version.py"
version_scheme = 'python-simplified-semver'
local_scheme = 'no-local-version'

[tool.pytest.ini_options]
addopts = "--cov=plenoptic"
testpaths = ["tests"]

[tool.ruff]
src = ['src']
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".github",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "tests",
    "examples",
    "docs"
]

# Set the maximum line length to 79.
line-length = 79

[tool.ruff.lint]
# Add the `line-too-long` rule to the enforced rule set. By default, Ruff omits rules that
# overlap with the use of a formatter, like Black, but we can override this behavior by
# explicitly adding the rule.
extend-select = ["D", "E", "F", "W", "B", "I"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
